@startuml
object PlayingField{
    Words []LetterArray
    Dimension [2]int
    Field [][]Cell
    ---
    GetField()
    GetStringField()
    WriteLetter(dot Position)
    PrintContentField()
    PrintRightLetterField()
    ToCharMatrix()
}

object Word {
    Term
    Hint
    Length
    IsGuessed
    ----
    
}

object LetterArray <<Название временное>>{
    Word
    MatrixRange
    align Align
    cellArray LetterCell[]
    startPoint Position
    ----
    IsCrossing(LetterArray)
    GetCellArray()
    GetCell(dot Position) LetterCell
    WriteLetter(dot Position, s string)
    Clear(dot Position)
    
}

Interface Cell{
   ---
   GetContent()
   GetX()
   GetY()
}

object Position  {
   X
   Y
   ---
   GetX()
   GetY()
   Next(align) Position
   DistanceTo(dot, align) int
}

object LetterCell {
   Position
   content
   rightLetter
   ---
   GetContent()
   GetRightLetter()
   IsCorrect()
   IsClear()
   Clear()
}

object BlockCell {
   Position
   content = #
   rightLetter = #
   ---
   GetContent()
   GetRightLetter()
}

object Range {
   min int
   max int
---
   InRange(dot) bool
   GetBoundaries() int int
}

object MatrixRange {
   XRange Range
   YRange Range
---
   SetXRange(x1, x2)
   SetYRange(y1, y2)
   InRange(dot) bool
}

Word --* LetterArray 
LetterCell --* LetterArray 
LetterArray --o PlayingField


LetterCell *-- Position
BlockCell *-- Position

MatrixRange *-- Range
MatrixRange *-- Range

LetterArray *-- MatrixRange

Cell <|.. LetterCell
Cell <|.. BlockCell

Cell --o PlayingField

@enduml
